# This is a sample Prometheus resource that deploys a
# namespace-only instance of Prometheus

# Note: ClusterRoles and ClusterRoleBindings are still required
# at the moment. Limiting these to namespace permissions is 
# still being investigated.

apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus-__TENANT__
  labels:
    sas.com/tenant: __TENANT__
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: prometheus-role-__TENANT__
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["pods","services","endpoints","ingresses"]
  verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: prometheus-rolebinding-__TENANT__
subjects:
- kind: ServiceAccount
  name: prometheus-__TENANT__
  apiGroup: ""
roleRef:
  kind: Role
  name: prometheus-role-__TENANT__
  #apiGroup: rbac.authorization.k8s.io
  apiGroup: ""
# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRole
# metadata:
#   name: prometheus-__TENANT__
#   labels:
#     sas.com/tenant: __TENANT__
# rules:
# - apiGroups:
#   - ""
#   resources:
#   - nodes/metrics
#   verbs:
#   - get
#   - list
#   - watch
# - apiGroups:
#   - ""
#   resources:
#   - nodes
#   - nodes/proxy
#   - services
#   - endpoints
#   - pods
#   verbs:
#   - get
#   - list
#   - watch
# - apiGroups:
#   - extensions
#   - networking.k8s.io
#   resources:
#   - ingresses
#   verbs:
#   - get
#   - list
#   - watch
# - nonResourceURLs:
#   - /metrics
#   verbs:
#   - get
# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRoleBinding
# metadata:
#   name: prometheus-__TENANT__
#   labels:
#     sas.com/tenant: __TENANT__
# roleRef:
#   apiGroup: rbac.authorization.k8s.io
#   kind: ClusterRole
#   name: prometheus-__TENANT__
# subjects:
# - kind: ServiceAccount
#   name: prometheus-__TENANT__
#   namespace: __VIYA_NS__
---
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  labels:
    app: prometheus
    sas.com/tenant: __TENANT__
  name: prometheus-__TENANT__
spec:
  image: quay.io/prometheus/prometheus:v2.26.1
  # alerting:
  #   alertmanagers:
  #   - apiVersion: v2
  #     name: prometheus-operator-alertmanager
  #     namespace: __MON_NS__
  #     pathPrefix: /
  #     port: web
  enableAdminAPI: false
  # externalUrl: http://prometheus.viya-one.host.cluster.example.com
  listenLocal: false
  logFormat: json
  logLevel: info
  paused: false
  portName: web
  replicas: 1
  retention: 3d
  retentionSize: 5GiB
  routePrefix: /
  securityContext:
    fsGroup: 2000
    runAsNonRoot: true
    runAsUser: 1000
  serviceAccountName: prometheus-__TENANT__
  # serviceMonitorNamespaceSelector:
  #   matchNames:
  #   - __TENANT_NS__
  serviceMonitorSelector:
    matchLabels:
      sas.com/tenant: __TENANT__
  
  # podMonitorNamespaceSelector:
  #   matchNames:
  #   - __TENANT_NS__
  podMonitorSelector:
    matchLabels:
      sas.com/tenant: __TENANT__

  # ruleNamespaceSelector:
  #   matchNames:
  #   - __TENANT_NS__
  ruleSelector:
    matchLabels:
      sas.com/tenant: __TENANT__

  version: v2.26.1
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: prometheus
    self-monitor: "true"
    sas.com/tenant: __TENANT__
  name: prometheus-__TENANT__
spec:
  type: ClusterIP
  ports:
  - name: web
    port: 9090
    protocol: TCP
    targetPort: 9090
  selector:
    app: prometheus
    prometheus: prometheus-__TENANT__
  sessionAffinity: None
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app: prometheus
    sas.com/tenant: __TENANT__
  name: prometheus-__TENANT__
spec:
  endpoints:
  - path: /metrics
    port: web
  selector:
    matchLabels:
      app: prometheus
      self-monitor: "true"

